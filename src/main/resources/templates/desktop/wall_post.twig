{# @pebvariable name="post" type="smithereen.model.viewmodel.PostViewModel" #}
{# @pebvariable name="realPost" type="smithereen.model.Post" #}
{% set realPost=post.post %}
{% if postInteractions is not null %}
{% set interactions=postInteractions[realPost.id] %}
{% endif %}
<table width="100%" cellpadding="0" cellspacing="0" class="post{{ standalone ? ' standalone' : '' }}" id="post{{ realPost.id }}">
	<tr>
		<td width="50" valign="top">
			<a href="{{ profileURL(realPost.authorID) }}"{{ profileRel(realPost.authorID) }}>{{ users[realPost.authorID] | pictureForAvatar('s') }}</a>
		</td>
		<td valign="top" class="postContentWrap">
			<a href="{{ profileURL(realPost.authorID) }}" class="authorName" id="postAuthor{{ realPost.id }}"{{ profileRel(realPost.authorID) }}>{{ users[realPost.authorID] | name }}</a>
			{%- if realPost.privacy!='PUBLIC' -%}
			<span class="privatePostLockIcon" data-tooltip="{{ L(realPost.privacy.langKey, {'name': users[realPost.authorID].firstAndGender}) }}"></span>
			{%- endif %}
			<div id="postInner{{ realPost.id }}">
				{% block postInner %}
				{% if realPost.hasContentWarning %}
				<input type="checkbox" id="postCW_{{ realPost.id }}" style="display: none"/>
				<div class="postCWWrap">
					<label for="postCW_{{ realPost.id }}" class="postCWButton ellipsize">{{ realPost.contentWarning | default(L('cw_default')) }}</label>
				{% endif %}
				{% if standalone %}
				<div class="postContent">{{ realPost.text | postprocessHTML }}</div>
				{% else %}
				<div class="postContent">{{ realPost.text | postprocessHTML | truncateText }}</div>
				{% endif %}
				{% if realPost.poll is not null %}
				{% include "poll" with {'poll': realPost.poll, 'interactions': interactions} %}
				{% endif %}
				{% if realPost.attachments is not empty %}
					{{ renderAttachments(realPost.processedAttachments, realPost.ownerID>0 ? users[realPost.ownerID] : groups[-realPost.ownerID]) }}
				{% endif %}
				{% if realPost.hasContentWarning %}
				</div>
				{% endif %}
				{% if realPost.federationState=='REJECTED' %}
				<div class="red">{{ L('wall_post_rejected') }}</div>
				{% endif %}
				<div class="postInfo"><a href="{{ realPost.internalURL }}" class="postLink">{{ LD(realPost.createdAt) }}</a>
					{% if userPermissions is not null and userPermissions.canDeletePost(realPost) %} |
					<a href="{{ realPost.internalURL }}/confirmDelete" onclick="return ajaxConfirm('delete_post', 'delete_post_confirm', '{{ realPost.internalURL }}/delete')">{{ L('delete') }}</a>
					{% endif %}
					{% if userPermissions is not null and userPermissions.canEditPost(realPost) %} |
					<a href="{{ realPost.internalURL }}/edit" data-ajax="1">{{ L('edit') }}</a>
					{% endif %}
					{% if userPermissions is not null and userPermissions.canReport(realPost) %} |
					<a href="/system/reportForm?type=post&id={{ realPost.id }}" data-ajax-box>{{ L('report') }}</a>
					{% endif %}
					{% if realPost.ownerID!=realPost.authorID and tab!="wall2wall" and realPost.ownerID>0 %} |
						<a href="/users/{{ realPost.ownerID }}/wall/with/{{ realPost.authorID }}">{{ L('wall_to_wall') }}</a>
					{% endif %}
					{% if not realPost.local %}
						| <a href="{{ realPost.activityPubURL }}" target="_blank" rel="noopener">{{ L('open_on_server_X', {'domain': realPost.activityPubURL.host}) }}</a>
					{% endif %}
					{% if not standalone and currentUser is not null and post.canComment %}
						<span id="postCommentLinkWrap{{ realPost.id }}" style="{{ post.repliesObjects is empty ? '' : 'display: none;' }}">| <a href="{{ realPost.internalURL }}" onclick="return showPostCommentForm({{ realPost.id }})">{{ L('add_comment') }}</a></span>
					{% endif %}
					{%if interactions is not null%}
					<span class="postActions">
						<span class="likeWrap" onmouseenter="likeOnMouseChange(this, true)" onmouseleave="likeOnMouseChange(this, false)">
							<a href="{{ realPost.internalURL }}/{% if interactions.isLiked %}un{% endif %}like?csrf={{ csrf }}" class="action like{% if interactions.isLiked %} liked{% endif %} popoverButton" id="likeButtonPost{{ realPost.id }}" data-obj-type="post" data-obj-id="{{ realPost.id }}" data-popover-url="{{ realPost.internalURL }}/likePopover" onclick="return likeOnClick(this)" rel="nofollow">
								{{- L('like') }}<span class="icon">&nbsp;</span><span class="counter" id="likeCounterPost{{ realPost.id }}" style="{%if interactions.likeCount==0%}display: none{%endif%}">
								{{- interactions.likeCount -}}
							</span></a>
							<span class="popoverPlace likePopoverWrap"></span>
						</span>
					</span>
					{%endif%}
				</div>
				{% endblock %}
			</div>
		</td>
	</tr>
</table>
{% if not standalone and interactions is not null %}
<div class="commentsPreviewWrap">
	{% if post.totalTopLevelComments>post.repliesObjects.size %}
		<a href="{{ realPost.internalURL }}" onclick="return loadOlderComments({{ realPost.id }})" class="loadPrev" id="loadPrevBtn{{ realPost.id }}" data-first-id="{{ post.repliesObjects[0].post.id }}">{{ L('show_previous_comments') }}</a>
		<div class="prevLoader loader" id="prevLoader{{ realPost.id }}" style="display: none;"></div>
	{% endif %}
	<div class="commentsPreview" id="postReplies{{ realPost.id }}" style="{{ post.repliesObjects is empty ? 'display: none;' : '' }}">
	{%for reply in post.repliesObjects%}
		{% include "wall_reply" with {'post': reply, 'preview': true, 'replyFormID': "wallPostForm_commentReplyPost#{realPost.id}", 'topLevel': post} %}
		{% set realPost=post.post %}{# the included template overwrites this variable #}
	{%endfor%}
	</div>
	{%set interactions=postInteractions[realPost.id]%}
{% if currentUser is not null and post.canComment %}
	{% include "wall_post_form" with {'id': "commentReplyPost#{realPost.id}", 'replyTo': realPost, 'hidden': true} %}
	{% include "wall_post_form" with {'id': "commentPost#{realPost.id}", 'replyTo': realPost, 'hidden': interactions.commentCount==0} %}
{% endif %}
</div>
{% endif %}