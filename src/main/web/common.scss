
$accent: #aab42f;
$textOnAccent: #FFFFFF;
$bg: #FFFFFF;
$gray: #F7F7F7;
$darkerGray: #DDDDDD;
$textOnGray: #707070;
$grayText: #909090;
$text: #000;

$alertBackground: #F9F6E7;
$alertBorder: #D4BC4C;


/* text */
$normalLink: rgb(72, 92, 0);
$boldHeaders: rgb(78, 112, 0);
$auxiliaryGrey: rgb(119, 119, 119);
$auxiliaryBlockHeader: rgb(171, 175, 114);

$darkGrey: #444444;
/* separators */
$wallPostSeparator: rgb(227, 225, 204);
$menuItemsSeparator: rgb(235, 234, 225);
$mainHeaderSeparator: rgb(236, 235, 226);
$wallCommentSeparator: rgb(238, 238, 238);
/* blocks */
$textAreaBorder: rgb(203, 204, 153);
$blockBorderTop: rgb(223, 218, 188);
$blockBorderBottom: rgb(228, 223, 193);
$blockBackground: rgb(234, 232, 203);
$blockUnderboxBackground: rgb(241, 241, 241);
$bgGrey: rgb(247, 247, 247);
/* button */
$buttonGradientBottom: rgb(96, 125, 0);
$buttonBorder: rgb(100, 137, 0);
$buttonBorderTop: rgb(136, 159, 61);
$buttonGradientTop: rgb(143, 159, 68);

$buttonGrayBorder: #b3b3b3;
$buttonGrayGradientTop: #fafafa;
$buttonGrayGradientBottom: #d4d4d4;
$buttonGrayBorderInner: #e7e7e7;
$buttonGrayActive: #dcdcdc;

/* tabs */
$tabBackground: rgb(104, 132, 1);
$simpleButton: rgb(92, 120, 0);
/* header */
$headerBorderTop: rgb(68, 107, 0);
$headerGradientTop: rgb(76, 110, 0);
$headerBorderBottomDark: rgb(75, 115, 0);
$headerGradientBottom: rgb(105, 134, 0);
$headerBorderBottomLight: rgb(118, 155, 27);
/* icons */
$iconColor: rgb(156, 168, 80);
$likeIconColor: rgb(219, 216, 173);


$normalLink: $headerGradientBottom;


@svg-load radioOff url('img/radio_off.svg'){
	fill: $textAreaBorder;
}
@svg-load radioOn url('img/radio_on.svg') {
	fill: $textAreaBorder;
	*[fill=lime]{
		fill: $buttonBorder;
	}
}
@svg-load radioOnHover url('img/radio_on_hover.svg') {
	fill: $textAreaBorder;
	*[fill=red]{
		fill: $blockBackground;
	}
	*[fill=lime]{
		fill: $buttonBorder;
	}
}
@svg-load radioOffHover url('img/radio_off_hover.svg') {
	fill: $textAreaBorder;
	*[fill=red]{
		fill: $blockBackground;
	}
}

@svg-load checkboxOff url('img/checkbox_off.svg'){
	fill: $textAreaBorder;
}
@svg-load checkboxOn url('img/checkbox_on.svg') {
	fill: $textAreaBorder;
	*[fill=lime]{
		fill: $buttonBorder;
	}
}
@svg-load checkboxOnHover url('img/checkbox_on_hover.svg') {
	fill: $textAreaBorder;
	*[fill=red]{
		fill: $blockBackground;
	}
	*[fill=lime]{
		fill: $buttonBorder;
	}
}
@svg-load checkboxOffHover url('img/checkbox_off_hover.svg') {
	fill: $textAreaBorder;
	*[fill=red]{
		fill: $blockBackground;
	}
}


*{
	box-sizing: border-box;
}


@mixin layer-shadow{
	box-shadow:
		0 1px 1.1px rgba(0, 0, 0, 0.028),
		0 2.3px 2.7px rgba(0, 0, 0, 0.04),
		0 4.4px 5px rgba(0, 0, 0, 0.05),
		0 7.8px 8.9px rgba(0, 0, 0, 0.06),
		0 14.6px 16.7px rgba(0, 0, 0, 0.072),
		0 35px 40px rgba(0, 0, 0, 0.1)
	;
}

@keyframes slideFromBottom{
	0%{
		opacity: 0;
		transform: translateY(16px);
	}
	100%{
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes slideFromTop{
	0%{
		opacity: 0;
		transform: translateY(-16px);
	}
	100%{
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes fadeOut{
	0%{
		opacity: 1;
	}
	100%{
		opacity: 0;
	}
}

@keyframes fadeIn{
	0%{
		opacity: 0;
	}
	100%{
		opacity: 1;
	}
}

@keyframes highlight{
	0%, 100%{
		background-color: color($blockBackground alpha(0%));
	}
	3%, 50%{
		background-color: color($blockBackground alpha(100%));
	}
}

body{
	width: 100%;
}

table{
	table-layout: fixed;
	td{
		padding: 0;
	}
}

a, a:link, a:visited, .link{
	color: $normalLink;
	text-decoration: none;
	cursor: pointer;
}

.singleLine{
	overflow-x: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.ava{
	border-radius: 2px;
	display: inline-block;
}

.avaImage{
	border-radius: 2px;
	vertical-align: top;
}

.avaHasImage{
	position: relative;
}

.avaHasImage::after{
	content: "";
	display: inline-block;
	border: solid 1px rgba(0,0,0,0.13);
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	box-sizing: border-box;
	border-radius: 2px;
}

.avaPlaceholder{
	background: $gray;
	vertical-align: top;
	margin: 0;
	background-image: svg-load("img/ava_placeholder_male_s.svg", fill: $darkerGray);
	background-repeat: no-repeat;
	background-position: center;
	border: solid 1px $darkerGray;
	box-sizing: border-box;
	&.sizeM{
		background-size: auto 32px;
	}
	&.sizeL{
		background-size: auto 48px;
	}
	&.female{
		background-image: svg-load("img/ava_placeholder_female_s.svg", fill: $darkerGray);
	}
	&.group{
		background-image: svg-load("img/ava_placeholder_group_s.svg", fill: $darkerGray);
	}
	&.inProfile{
		width: 200px;
		height: 200px;
		border: none;
		position: relative;
		background-image: svg-load("img/ava_placeholder_male_l.svg", fill: $darkerGray);
		&.female{
			background-image: svg-load("img/ava_placeholder_female_l.svg", fill: $darkerGray);
		}
		&.group{
			background-image: svg-load("img/ava_placeholder_group_l.svg", fill: $darkerGray);
		}
	}
}

#layerScrim, #layerContainer{
	position: fixed;
	left: 0;
	top: 0;
	bottom: 0;
	right: 0;
}

#layerScrim{
	background-color: rgba(0, 0, 0, .2);
	z-index: 100;
}

#layerContainer{
	width: 100%;
	height: 100%;
	pointer-events: none;
	z-index: 110;
}

.layerContent{
	overflow-y: scroll;
	max-height: 100%;
	height: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	/*>div{
		margin: auto;
	}*/
}

input[type=text], input[type=password], input[type=email], input[type=date], input[type=number], textarea, select, .prefixedInput{
	border: solid 1px $textAreaBorder;
	padding: 3px;
	appearance: none;
	background-color: $bg;
}

.prefixedInput{
	display: inline-flex;
	padding: 0 0 0 3px;
	input[type=text]{
		border: none;
		padding-left: 0;
		flex-grow: 1;
	}
	.prefix{
		color: $auxiliaryGrey;
		padding: 3px 0;
		cursor: text;
	}
}

textarea{
	resize: none;
}


::placeholder{
	color: $auxiliaryGrey;
	opacity: 1;
	transition: opacity .2s ease;
}

:focus::placeholder{
	opacity: .7;
}

.gray{
	background: $gray;
}

.grayText{
	color: $auxiliaryGrey;
}

.post{
	border-spacing: 0;
	.authorName{
		font-weight: bold;
	}
	p{
		margin-top: 8px;
		margin-bottom: 8px;
		overflow-y: hidden;
	}

	p:first-child{
		margin-top: 0;
	}

	p:last-child{
		margin-bottom: 0;
	}

	.postContentWrap{
		video{
			max-width: 100%;
		}
	}
}

.postContent{
	word-wrap: break-word;
}

.postAttachments{
	padding-top: 8px;
}

.wallPostForm{
	position: relative;
	textarea{
		width: 100%;
		max-width: 100%;
		vertical-align: top;
	}
	.attachment{
		width: 200px;
		height: 150px;
		position: relative;
		display: inline-block;
		margin-top: 8px;
		margin-right: 8px;
		.scrim, .progressBarFrame{
			display: none;
		}
		.deleteBtn{
			position: absolute;
			top: 0;
			right: 0;
			width: 32px;
			height: 32px;
			background-image: svg-load("img/attach_delete.svg"), radial-gradient(closest-side, rgba(0,0,0,.1), transparent);
			background-position: center;
			background-repeat: no-repeat;
		}
		img{
			width: 100%;
			height: 100%;
			object-fit: cover;
		}
		&.uploading{
			.scrim{
				display: block;
				background: rgba(0,0,0,.5);
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
			}
			.progressBarFrame{
				display: block;
				position: absolute;
				bottom: 0;
				left: 0;
				right: 0;
				height: 4px;
				border-radius: 2px;
				background: rgba(0,0,0,.5);
				overflow: hidden;
				margin: 8px;
			}
			.progressBar{
				width: 100%;
				height: 100%;
				background: #FFF;
				transition: transform 0.3s ease-in-out;
				transform-origin: left;
			}
		}
	}
	.bottomBar{
		margin-top: 8px;
		.right{
			padding-right: 5px;
		}
	}
}

.hasJS .wallPostForm.collapsed{
	.bottomBar{
		display: none;
	}
}

.notificationIcon{
	border-radius: 50%;
	width: 16px;
	height: 16px;
	margin: -13px;
	position: absolute;
	top: 100%;
	left: 100%;
	box-shadow: rgba(0,0,0,20%) 0 2px 4px;
	background-repeat: no-repeat;
	background-position: center;
}

.notification .avaWrap{
	position: relative;
}

.notificationFollow .notificationIcon, .notificationInviteSignup .notificationIcon, .notificationFriendReqAccept .notificationIcon{
	background-color: #2979FF;
	background-image: svg-load('img/ntf_add.svg', fill: #FFF);
}

.notificationLike .notificationIcon{
	background-color: #FF1744;
	background-image: svg-load('img/ntf_like.svg', fill: #FFF);
}

.notificationMention .notificationIcon{
	background-color: #4EBF4F;
	background-image: svg-load('img/ntf_mention.svg', fill: #FFF);
}

.notificationPostOwnWall .notificationIcon, .notificationReply .notificationIcon{
	background-color: #4EBF4F;
	background-image: svg-load('img/ntf_comment.svg', fill: #FFF);
}

.notificationRetoot .notificationIcon, .notificationRepost .notificationIcon{
	background-color: #4EBF4F;
	background-image: svg-load('img/ntf_share.svg', fill: #FFF);
}

input[type=radio]{
	appearance: none;
	background: svg-inline(radioOff) no-repeat center;
	margin: 0;
	width: 16px;
	height: 16px;
	&:checked{
		background: svg-inline(radioOn) no-repeat center;
		&:hover{
			background: svg-inline(radioOnHover) no-repeat center;
		}
	}
	&:hover{
		background: svg-inline(radioOffHover) no-repeat center;
	}
}

input[type=checkbox]{
	appearance: none;
	background: svg-inline(checkboxOff) no-repeat center;
	margin: 0;
	width: 16px;
	height: 16px;
	&:checked{
		background: svg-inline(checkboxOn) no-repeat center;
		&:hover{
			background: svg-inline(checkboxOnHover) no-repeat center;
		}
	}
	&:hover{
		background: svg-inline(checkboxOffHover) no-repeat center;
	}
}


.dataTable{
	.tableHeader{
		height: 24px;
		background: $blockBackground;
		color: $boldHeaders;
		td, th{
			padding: 0;
		}
	}
	td, th{
		border-top: solid 1px $blockBorderTop;
		padding: 4px 0;
		min-height: 24px;
		box-sizing: border-box;
	}
	border-spacing: 0;
	border-bottom: solid 1px $blockBorderTop;
	&.padAround{
		margin: 8px 0;
	}

	&.noOuterBorders{
		border-bottom: none;
		tr:first-child td{
			border-top: none;
		}
	}
}

.noBorderSpacing{
	border-spacing: 0;
}



.fileUploadBoxContent{
	position: relative;
	input{
		display: none;
	}
	form{
		padding-top: 8px;
	}
	>.inner{
		padding: 16px 0;
		text-align: center;
	}
}

.profilePictureBoxImgWrap{
	margin-top: 8px;
	display: inline-block;
	position: relative;
	>img{
		max-width: 100%;
		max-height: 800px;
		vertical-align: top;
		user-select: none;
	}
}

.imageAreaSelector{
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	.selected{
		border: solid 1px rgba(50,50,50,.7);
		position: absolute;
		cursor: move;
		.markerCont{
			width: 100%;
			height: 100%;
			position: relative;
		}
		.marker{
			width: $imgAreaSelectorMarkerSize;
			height: $imgAreaSelectorMarkerSize;
			border-radius: $imgAreaSelectorMarkerBorderRadius;
			background: #FFF;
			border: solid 1px rgba(0,0,0,0.15);
			position: absolute;
			&.tl{
				top: calc(-$imgAreaSelectorMarkerSize/2);
				left: calc(-$imgAreaSelectorMarkerSize/2);
				cursor: nwse-resize;
			}
			&.tr{
				top: calc(-$imgAreaSelectorMarkerSize/2);
				right: calc(-$imgAreaSelectorMarkerSize/2);
				cursor: nesw-resize;
			}
			&.bl{
				bottom: calc(-$imgAreaSelectorMarkerSize/2);
				left: calc(-$imgAreaSelectorMarkerSize/2);
				cursor: nesw-resize;
			}
			&.br{
				bottom: calc(-$imgAreaSelectorMarkerSize/2);
				right: calc(-$imgAreaSelectorMarkerSize/2);
				cursor: nwse-resize;
			}
		}
		.edge{
			position: absolute;
			&.top{
				top: calc(-$imgAreaSelectorMarkerSize/2);
				left: calc($imgAreaSelectorMarkerSize/2);
				right: calc($imgAreaSelectorMarkerSize/2);
				height: $imgAreaSelectorMarkerSize;
				cursor: ns-resize;
			}
			&.bottom{
				bottom: calc(-$imgAreaSelectorMarkerSize/2);
				left: calc($imgAreaSelectorMarkerSize/2);
				right: calc($imgAreaSelectorMarkerSize/2);
				height: $imgAreaSelectorMarkerSize;
				cursor: ns-resize;
			}
			&.left{
				left: calc(-$imgAreaSelectorMarkerSize/2);
				top: calc($imgAreaSelectorMarkerSize/2);
				bottom: calc($imgAreaSelectorMarkerSize/2);
				width: $imgAreaSelectorMarkerSize;
				cursor: ew-resize;
			}
			&.right{
				right: calc(-$imgAreaSelectorMarkerSize/2);
				top: calc($imgAreaSelectorMarkerSize/2);
				bottom: calc($imgAreaSelectorMarkerSize/2);
				width: $imgAreaSelectorMarkerSize;
				cursor: ew-resize;
			}
		}
	}
	.scrim{
		position: absolute;
		background: rgba(50,50,50,.5);
	}
}

.tinyInlineAva .ava{
	vertical-align: middle;
	margin-right: 8px;
}

.ellipsize{
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
}

#boxLoader{
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	>div{
		width: 100px;
		height: 50px;
		background: rgba(0,0,0,.7) svg-load('img/loading_anim.svg', fill: #fff) no-repeat center;
		background-size: 64px 16px;
		border-radius: 5px;
		@include layer-shadow;
	}
}

.flR{
	float: right;
}

.flL{
	float: left;
}

.clear{
	clear: both;
}

.marginsAreMessy{
	height: 1px;
	margin-top: -1px;
}

ul.actualList{
	list-style-type: square;
	color: $normalLink;
	padding: 0;
	padding-left: 15px;
	li{
		margin-bottom: 5px;
		span{
			color: $text;
		}
	}
}

.loader, .inlineLoader{
	background: svg-load('img/loading_anim.svg', fill: $normalLink) no-repeat center;
	background-size: 32px 8px;
	min-width: 32px;
	min-height: 8px;
}

.inlineLoader{
	display: inline-block;
}

.feedIcon{
	width: 16px;
	height: 16px;
	float: left;
	&.feedIconAdd{
		background: svg-load('img/friends_s.svg');
	}
	&.feedIconGroup{
		background: svg-load('img/groups_s.svg');
	}
	&.feedIconStatus{
		background: svg-load('img/statuses_s.svg');
	}
}

.undecoratedLink{
	&, &:link, &:hover, &:visited, &:visited:hover{
		color: $text;
		text-decoration: none;
	}
}

.expandableText>.full{
	display: none;
}

.textExpander:checked+.expandableText{
	>.full{
		display: block;
	}
	>.truncated, >label{
		display: none;
	}
}

.textExpander{
	display: none;
}

.expandableText>label{
	cursor: pointer;
	color: $normalLink;
}
